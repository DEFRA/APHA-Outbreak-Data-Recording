<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1410,1516.4" sap2010:WorkflowViewState.IdRef="Process_Transaction_2_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:d="clr-namespace:DRACOE_PopUps_64;assembly=DRACOE.PopUps.64" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Diagnostics;assembly=System.Private.CoreLib" xmlns:sg="clr-namespace:System.Globalization;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>DRACOE_PopUps_64</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>DRACOE.PopUps.64</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="713.2,1451.2" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strDocText" />
      <Variable x:TypeArguments="x:String" Name="strFormType" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(of String, String)]" Name="dictFormValues" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtStockTable" />
      <Variable x:TypeArguments="x:Boolean" Name="boolTimeParsed" />
      <Variable x:TypeArguments="x:Boolean" Name="boolDateParsed" />
      <Variable x:TypeArguments="x:Boolean" Name="boolDateTimeParsed" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">1336.6000000000001</x:Double>
        <x:Double x:Key="Width">679.2</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,97.7</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID10</x:Reference>
    </Flowchart.StartNode>
    <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID7" DisplayName="Doc type" Expression="[strFormType]" sap:VirtualizedContainerService.HintSize="70,87.2" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
      <FlowSwitch.Default>
        <FlowStep x:Name="__ReferenceID6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">0,318.09999999999997</av:Point>
              <av:Size x:Key="ShapeSize">200,53.2</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw DisplayName="Throw BRE - unrecognised form" Exception="[new BusinessRuleException(&quot;Unrecognised form type. This may indicate that the form is scanned and handwritten or that it is not one of the recognised codes. This automation is currently equipped to process EXD codes 195, 196, 197, 644 and 44.&quot;)]" sap:VirtualizedContainerService.HintSize="200,53.2" sap2010:WorkflowViewState.IdRef="Throw_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Throw>
        </FlowStep>
      </FlowSwitch.Default>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">265,260.9</av:Point>
          <av:Size x:Key="ShapeSize">70,87.2</av:Size>
          <av:PointCollection x:Key="Default">265,304.5 100,304.5 100,318.09999999999997</av:PointCollection>
          <av:PointCollection x:Key="EXD195Connector">300,348.09999999999997 300,508.0999999999999</av:PointCollection>
          <av:PointCollection x:Key="EXD196Connector">282.5,348.09999999999997 282.5,378.09999999999997 170,378.09999999999997 170,418.09999999999997</av:PointCollection>
          <av:PointCollection x:Key="EXD197Connector">317.5,348.09999999999997 317.5,378.09999999999997 430,378.09999999999997 430,408.09999999999997</av:PointCollection>
          <av:PointCollection x:Key="EXD644Connector">335,326.29999999999995 364.99999999999994,326.29999999999995 364.99999999999994,354.9 445,354.9</av:PointCollection>
          <av:PointCollection x:Key="EXD44Connector">335,282.7 364.99999999999994,282.7 364.99999999999994,260 440,260</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowStep x:Key="EXD195" x:Name="__ReferenceID1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,508.0999999999999</av:Point>
            <av:Size x:Key="ShapeSize">200,83.6</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,591.6999999999999 300,681.6999999999999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Scrape EXD195" sap:VirtualizedContainerService.HintSize="200,83.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strNameDate" />
            <Variable x:TypeArguments="s:DateTime" Name="datetimeVisit" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Scrape EXD195 values and store to dictionary" sap:VirtualizedContainerService.HintSize="541.6,273.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("CPH")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=CPH No\.).*?(?=This form may be completed)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("JRF")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=JRF No\.).*?(?=AIV of IP)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strNameDate]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Part Three.*?Name).*?(?=Mobile)").Value]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VetName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Replace(strNameDate,"[^A-z\s]|Date","").Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Replace(strNameDate,"[^0-9]","")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("Comments")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Surveillance Team comments\:).*?(?=Form reviewed by OSV)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read stock table 195, 196, 197 - Invoke Workflow File (Read stock table 195, 196, 197.xaml)" sap:VirtualizedContainerService.HintSize="541.6,174.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Read stock table 195, 196, 197.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strDocText">[strDocText]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtStockTable">[dtStockTable]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="TryParse date and time - EXD195" sap:VirtualizedContainerService.HintSize="541.6,467.2" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="TryParse visit datetime - 195" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="TryParse" TargetType="s:DateTime">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolDateTimeParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:DateTime">[datetimeVisit]</OutArgument>
            </InvokeMethod>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Depends on how successful parsing was." DisplayName="Re-assign visit date and time - 195" sap:VirtualizedContainerService.HintSize="479.6,179.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateTimeParsed, datetimeVisit.ToString("dd/MM/yyyy"),"Please enter a date in dd/MM/yyyy format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateTimeParsed, datetimeVisit.ToString("HH:mm"), "Please enter a time in HH:mm format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
          </Sequence>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID0">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">200,681.6999999999999</av:Point>
                <av:Size x:Key="ShapeSize">200,226.8</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,908.5 300,924.0999999999999</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="We keep the name &quot;Pause Point&quot; for ease and consistency, but this one is not on-off asset toggleable like the others. We always need the user to check if any scraped form data needs correcting." DisplayName="Pause Point 1" sap:VirtualizedContainerService.HintSize="200,226.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtFormValues" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InvokeMethod DisplayName="Stop timer - PP1" sap:VirtualizedContainerService.HintSize="606,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Stop">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sd1:Stopwatch">[g_swProcessingTimer]</InArgument>
                </InvokeMethod.TargetObject>
              </InvokeMethod>
              <ui:BuildDataTable DataTable="[dtFormValues]" DisplayName="Build Data Table - form values" sap:VirtualizedContainerService.HintSize="606,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;key&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
              <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each formValue" sap:VirtualizedContainerService.HintSize="606,414" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dictFormValues]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="formValue" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,277.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{formValue.Key+&quot;&lt;read only&gt;&quot;,formValue.Value}]" DataTable="[dtFormValues]" DisplayName="Add Data Row - form values" sap:VirtualizedContainerService.HintSize="334,188.8" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" DisplayName="Open PDF in browser" sap:VirtualizedContainerService.HintSize="606,1783.6" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" OpenMode="Always" ScopeGuid="01f77a08-b66b-48b6-8ae0-099f43b8c257" Version="V2">
                <uix:NApplicationCard.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Display pause points for data correction" sap:VirtualizedContainerService.HintSize="572,1566" sap2010:WorkflowViewState.IdRef="Sequence_25">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <d:Editable_DataTable out_TableHTML="{x:Null}" DisplayName="PP1 - form values" sap:VirtualizedContainerService.HintSize="510,506.8" sap2010:WorkflowViewState.IdRef="Editable_DataTable_2" in_Body="[&quot;&lt;h1&gt;Form data correction&lt;/h1&gt;&quot;+&#xA;&quot;&lt;p&gt;Please review the data scraped from the pdf form and correct any values where necessary.&lt;br&gt;&quot;+&#xA;&quot;Please pay special attention to the VisitDate and VisitTime fields&lt;br&gt;&quot;+&#xA;&quot;Visit date and time as retrieved from pdf: &amp;ensp;&quot;+dictFormValues(&quot;VisitDateTime&quot;)+&quot;&lt;br&gt;&quot;+&#xA;&quot;The PDF has also been opened in a browser window for your reference.&lt;/p&gt;&quot;+&#xA;&quot;&lt;p&gt;Please note that data corrected here &lt;strong&gt;will not&lt;/strong&gt; be re-validated. Please ensure that formatting etc is correct before continuing.&quot;]" in_CSS_Path="Standard Template.css" in_FormHTMLPath="FormRender.html" in_FullReadOnly="False" in_ShowForm="True" in_TemplatePath="FormCreatorTemplate.html" in_WidthHeight="[{1000,700}]" io_Table="[dtFormValues]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </d:Editable_DataTable>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtFormValues]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,358" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,170.4" sap2010:WorkflowViewState.IdRef="Sequence_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Update dictionary value" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[dictFormValues(CurrentRow("key").ToString.Replace("&lt;read only&gt;",""))]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[CurrentRow("value").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <d:Editable_DataTable in_FullReadOnly="{x:Null}" out_TableHTML="{x:Null}" DisplayName="PP1 - stock table" sap:VirtualizedContainerService.HintSize="510,506.8" sap2010:WorkflowViewState.IdRef="Editable_DataTable_1" in_Body="&lt;br&gt; Optional Body Text &lt;br&gt;" in_CSS_Path="Standard Template.css" in_FormHTMLPath="FormRender.html" in_ShowForm="True" in_TemplatePath="FormCreatorTemplate.html" in_WidthHeight="[{1000,700}]" io_Table="[dtStockTable]" />
                    </Sequence>
                  </ActivityAction>
                </uix:NApplicationCard.Body>
                <uix:NApplicationCard.TargetApp>
                  <uix:TargetApp Area="0, 0, 0, 0" Selector="&lt;html app='msedge.exe' title='*.pdf' /&gt;" Title="*.pdf" Url="[&quot;file://&quot;+g_TransactionItem]" />
                </uix:NApplicationCard.TargetApp>
              </uix:NApplicationCard>
              <InvokeMethod DisplayName="Start timer - PP1" sap:VirtualizedContainerService.HintSize="606,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Start">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sd1:Stopwatch">[g_swProcessingTimer]</InArgument>
                </InvokeMethod.TargetObject>
              </InvokeMethod>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">200,924.0999999999999</av:Point>
                    <av:Size x:Key="ShapeSize">200,53.2</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Never" DisplayName="Navigate NDOMS" sap:VirtualizedContainerService.HintSize="484,490.4" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" InteractionMode="DebuggerApi" OpenMode="IfNotOpen" ScopeGuid="7cae1b54-68e8-4def-b0d4-cbb15d6a31f5" Version="V2" WindowResize="Maximize">
                  <uix:NApplicationCard.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,272.4" sap2010:WorkflowViewState.IdRef="Sequence_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click Search" sap:VirtualizedContainerService.HintSize="388,158" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="7cae1b54-68e8-4def-b0d4-cbb15d6a31f5" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable BrowserURL="https://t1ndoms.app.defra.gov.uk/" DesignTimeRectangle="326, 861, 1045, 60" DesignTimeScaleFactor="2.5" FriendlyName="'Search Facility'" FullSelectorArgument="&lt;webctrl tag='H2' visibleinnertext='Search Facility' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='H2' visibleinnertext='Search Facility' type='' class='leading-6 text-defra-warm-grey-900 text-base font-semibold group-hover:font-bold group-hover:text-defra-cyan-950' aaname='' check:text='Search Facility' /&gt;" Guid="d4df77fe-ddc5-43c4-97c1-b2c431769371" InformativeScreenshot="d9c281fbd5e152a7311bb32d328877e9.png" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Welcome to NDOMS' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive">
                              <uix:TargetAnchorable.Anchors>
                                <scg:List x:TypeArguments="uix:ITarget" Capacity="4">
                                  <uix:Target DesignTimeRectangle="266, 486, 3500, 75" ElementType="Text" FriendlyName="'APHA -'" FullSelectorArgument="&lt;webctrl tag='H1' aaname='APHA - Notifiable Disease Outbreak Management System ' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='H1' aaname='APHA - Notifiable Disease Outbreak Management System ' type='' class='text-defra-red-900 text-2xl font-semibold leading-tight tracking-wide outline-none' check:text='APHA - Notifiable Disease Outbreak Management System (NDOMS)' /&gt;" SearchSteps="Selector" />
                                </scg:List>
                              </uix:TargetAnchorable.Anchors>
                            </uix:TargetAnchorable>
                          </uix:NClick.Target>
                        </uix:NClick>
                      </Sequence>
                    </ActivityAction>
                  </uix:NApplicationCard.Body>
                  <uix:NApplicationCard.TargetApp>
                    <uix:TargetApp Area="0, 0, 0, 0" Selector="&lt;html app='msedge.exe' title='Welcome to NDOMS' /&gt;" Title="Welcome to NDOMS" Url="[g_Config(&quot;NDOMS_URL&quot;).ToString]" />
                  </uix:NApplicationCard.TargetApp>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NApplicationCard>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
      <FlowStep x:Key="EXD196" x:Name="__ReferenceID2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">70,418.09999999999997</av:Point>
            <av:Size x:Key="ShapeSize">200,83.6</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">170,501.69999999999993 170,651.6999999999999 300,651.6999999999999 300,681.6999999999999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Scrape EXD196" sap:VirtualizedContainerService.HintSize="200,83.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:DateOnly" Name="dateVisit" />
            <Variable x:TypeArguments="s:TimeOnly" Name="timeVisit" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="We construct a seperate &quot;strPausePointDateTime&quot; entry purely for presentation in the Pause Point and consistency across forms." DisplayName="Scrape EXD196 values and store to dictionary" sap:VirtualizedContainerService.HintSize="541.6,348.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("CPH")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=CPH No\.).*?(?=FOB No\.)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("JRF")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=JRF No\.).*?(?=CPH No\.)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VetName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Form completed by VI).*?(?=MRCVS)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Date\:).*?(?=Time\:)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Time\:).*?(?=Signature\:)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("Comments")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Surveillance Team Comments\:).*?(?=Form reviewed by OSV)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")+" | "+dictFormValues("VisitTime")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read stock table 195, 196, 197 - Invoke Workflow File (Read stock table 195, 196, 197.xaml)" sap:VirtualizedContainerService.HintSize="541.6,174.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Read stock table 195, 196, 197.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strDocText">[strDocText]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtStockTable">[dtStockTable]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="TryParse date and time - EXD196" sap:VirtualizedContainerService.HintSize="541.6,643.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="TryParse date - 196" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="TryParse" TargetType="s:DateOnly">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolDateParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:DateOnly">[dateVisit]</OutArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="TryParse time - 196" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="TryParse" TargetType="s:TimeOnly">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolTimeParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:TimeOnly">[timeVisit]</OutArgument>
            </InvokeMethod>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Depends on how successful parsing was." DisplayName="Re-assign visit date and time - 196" sap:VirtualizedContainerService.HintSize="479.6,179.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateParsed, dateVisit.ToString("dd/MM/yyyy"),"Please enter a date in dd/MM/yyyy format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolTimeParsed, timeVisit.ToString("HH:mm"), "Please enter a time in HH:mm format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
          </Sequence>
        </Sequence>
        <FlowStep.Next>
          <x:Reference>__ReferenceID0</x:Reference>
        </FlowStep.Next>
      </FlowStep>
      <FlowStep x:Key="EXD197" x:Name="__ReferenceID3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">330,408.09999999999997</av:Point>
            <av:Size x:Key="ShapeSize">200,83.6</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">430,491.69999999999993 430,651.6999999999999 300,651.6999999999999 300,681.6999999999999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Scrape EXD197" sap:VirtualizedContainerService.HintSize="200,83.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:DateOnly" Name="dateVisit" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="We construct a seperate &quot;VisitDateTime&quot; entry purely for presentation in the Pause Point and consistency across forms." DisplayName="Scrape EXD197 values and store to dictionary" sap:VirtualizedContainerService.HintSize="496,348.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("CPH")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=CPH No\.).*?(?=FOB No\.)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("JRF")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=JRF No\. where).*?(?=Title Ref)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VetName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Name in block).*?(?=letters)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Part Three.*Date\:?).*?(?=Agency or)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("Comments")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Additional Comments\/instructions\:).*?(?=Form reviewed by OSV)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">00:00</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read stock table 195, 196, 197 - Invoke Workflow File (Read stock table 195, 196, 197.xaml)" sap:VirtualizedContainerService.HintSize="496,174.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Read stock table 195, 196, 197.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strDocText">[strDocText]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtStockTable">[dtStockTable]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="TryParse date - EXD197" sap:VirtualizedContainerService.HintSize="496,400.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="TryParse date - 197" sap:VirtualizedContainerService.HintSize="434,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="TryParse" TargetType="s:DateOnly">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolDateParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:DateOnly">[dateVisit]</OutArgument>
            </InvokeMethod>
            <Assign sap2010:Annotation.AnnotationText="Depends on how successful parsing was." DisplayName="Re-assign visit date - 197" sap:VirtualizedContainerService.HintSize="434,113.2" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[if(boolDateParsed, dateVisit.ToString("dd/MM/yyyy"),"Please enter a date in dd/MM/yyyy format")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </Sequence>
        <FlowStep.Next>
          <x:Reference>__ReferenceID0</x:Reference>
        </FlowStep.Next>
      </FlowStep>
      <FlowStep x:Key="EXD44" x:Name="__ReferenceID5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">440,218.2</av:Point>
            <av:Size x:Key="ShapeSize">200,83.6</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">640,259.59999999999997 660,259.59999999999997 660,651.6999999999999 300,651.6999999999999 300,681.6999999999999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Scrape EXD44" sap:VirtualizedContainerService.HintSize="200,83.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strPostVisitActions" />
            <Variable x:TypeArguments="s:String[]" Name="arrPostVisitActions" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="We construct a seperate &quot;VisitDateTime&quot; entry purely for presentation in the Pause Point and consistency across forms." DisplayName="Scrape EXD44 values and store to dictionary" sap:VirtualizedContainerService.HintSize="541.6,317.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("CPH")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=CPH No).*?(?=JRF)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("JRF")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=JRF).*?(?=APH Office)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VetName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Part Three.*?Name).*?(?=Mobile No").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Date of visit).*?(?=Time visit began").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Time visit began).*?(?=3\. Location of Stock").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")+" | "+dictFormValues("VisitTime")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read stock table 44 - Invoke Workflow File (Read stock table 44.xaml)" sap:VirtualizedContainerService.HintSize="541.6,174.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Read stock table 44.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strDocText">[strDocText]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtStockTable">[dtStockTable]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="Post visit actions - EXD44" sap:VirtualizedContainerService.HintSize="541.6,82.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Scrape post visit actions" sap:VirtualizedContainerService.HintSize="510,82.4" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strPostVisitActions]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Post visit actions.*?initiated\)).*?(?=Summary of key points to be recorded on NDOMS)").Value.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Split on line breaks" sap:VirtualizedContainerService.HintSize="510,82.4" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[arrPostVisitActions]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[Strings.Split(strPostVisitActions,Environment.NewLine)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each line" sap:VirtualizedContainerService.HintSize="510,308" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrPostVisitActions]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,170.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Concatenate comment" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dictFormValues("Comments")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[(dictFormValues("Comments")+" "+Regex.Split(line, "\s{3,}")(0).Trim).Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
          <Sequence DisplayName="TryParse date and time - EXD44" sap:VirtualizedContainerService.HintSize="541.6,643.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:DateOnly" Name="dateVisit" />
              <Variable x:TypeArguments="s:TimeOnly" Name="timeVisit" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="TryParse date - 44" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="TryParse" TargetType="s:DateOnly">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolDateParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:DateOnly">[dateVisit]</OutArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="TryParse time - 44" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="TryParse" TargetType="s:TimeOnly">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolTimeParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:TimeOnly">[timeVisit]</OutArgument>
            </InvokeMethod>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Depends on how successful parsing was." DisplayName="Re-assign visit date and time - 44" sap:VirtualizedContainerService.HintSize="479.6,179.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateParsed, dateVisit.ToString("dd/MM/yyyy"),"Please enter a date in dd/MM/yyyy format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolTimeParsed, timeVisit.ToString("HH:mm"), "Please enter a time in HH:mm format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
          </Sequence>
        </Sequence>
        <FlowStep.Next>
          <x:Reference>__ReferenceID0</x:Reference>
        </FlowStep.Next>
      </FlowStep>
      <FlowStep x:Key="EXD644" x:Name="__ReferenceID4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">445,313.09999999999997</av:Point>
            <av:Size x:Key="ShapeSize">200,83.6</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">545,395.9 545,651.6999999999999 300,651.6999999999999 300,681.6999999999999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Scrape EXD644" sap:VirtualizedContainerService.HintSize="200,83.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Scrape EXD644 values and store to dictionary" sap:VirtualizedContainerService.HintSize="541.6,210.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("CPH")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=CPH No:).*?(?=AIV No for zone)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("JRF")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=JRF No:).*?(?=FOB No)").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VetName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Name of Veterinary Inspector:).*?(?=Date and time of visit").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"(?s)(?&lt;=Date and time of visit:).*?(?=Part One").Value.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read stock table 644 - Invoke Workflow File (Read stock table 644.xaml)" sap:VirtualizedContainerService.HintSize="541.6,174.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Read stock table 644.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strDocText">[strDocText]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtStockTable">[dtStockTable]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="TryParse date and time - EXD644" sap:VirtualizedContainerService.HintSize="541.6,467.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:DateTime" Name="datetimeVisit" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="TryParse visit datetime - 644" sap:VirtualizedContainerService.HintSize="479.6,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="TryParse" TargetType="s:DateTime">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:Boolean">[boolDateTimeParsed]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="x:String">[dictFormValues("VisitDateTime")]</InArgument>
              <InArgument x:TypeArguments="s:IFormatProvider">[System.Globalization.CultureInfo.GetCultureInfo("en-GB")]</InArgument>
              <InArgument x:TypeArguments="sg:DateTimeStyles">[System.Globalization.DateTimeStyles.None]</InArgument>
              <OutArgument x:TypeArguments="s:DateTime">[datetimeVisit]</OutArgument>
            </InvokeMethod>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Depends on how successful parsing was." DisplayName="Re-assign visit date and time - 644" sap:VirtualizedContainerService.HintSize="479.6,179.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitDate")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateTimeParsed, datetimeVisit.ToString("dd/MM/yyyy"),"Please enter a date in dd/MM/yyyy format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dictFormValues("VisitTime")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[if(boolDateTimeParsed, datetimeVisit.ToString("HH:mm"), "Please enter a time in HH:mm format")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
          </Sequence>
        </Sequence>
        <FlowStep.Next>
          <x:Reference>__ReferenceID0</x:Reference>
        </FlowStep.Next>
      </FlowStep>
    </FlowSwitch>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,186.89999999999998</av:Point>
          <av:Size x:Key="ShapeSize">200,53.2</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,240.09999999999997 300,260.9</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Get form type" sap:VirtualizedContainerService.HintSize="200,53.2" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strFormType]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Regex.Match(strDocText,"EXD(195|196|197|644|44)").Value]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <x:Reference>__ReferenceID7</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">139,97.7</av:Point>
          <av:Size x:Key="ShapeSize">322,69.2</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,166.9 300,186.89999999999998</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadPDFText DisplayName="Read PDF Text" FileName="[g_TransactionItem]" sap:VirtualizedContainerService.HintSize="322,69.2" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" PreserveFormatting="True" Range="All" Text="[strDocText]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadPDFText>
      <FlowStep.Next>
        <x:Reference>__ReferenceID8</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID9</x:Reference>
  </Flowchart>
</Activity>